Jogo: Batalha de Cartas
Instruções:
- O deck da parte superior da janela e o deck do jogador 1. O da parte inferior o do jogador 2.
- O jogador 1 sempre começa
- Cada jogador só pode invocar 1 monstro por turno
- Cada jogador só pode invocar 1 magia por turno
- Cada jogador só pode usar 1 magia por turno
- Cada monstro só pode atacar uma vez por turno
- Na primeira rodada nenhum jogador pode atacar
- Na sua vez cada jogador pode realizar algumas ações, sendo elas:
	Na mão do jogador:
    -> pescar uma carta
	-> invocar uma carta de monstro em modo de ataque(summon)
	-> invocar uma carta de monstro em modo de defesa (set)
	-> invocar uma carta de magia (summon ou set)
	Na mesa:
	-> atacar um monstro inimigo
    -> girar uma carta para modo de defesa/ataque
    -> usar o efeito de um monstro ou usar uma magia
	-> finalizar turno
- No ataque, se ambos estiverem em modo de ataque, o que possuir o maior ataque vence, a carta mais fraca é destruida
    -> Se o atacado for um monstro em modo de defesa, o ataque do atacante deve ser maior que a defesa do atacado. O mais fraco é destruido
    -> Ao atacar, se o jogador inimigo não possuir nenhum monstro em campo, pode atacar diretamente o adversário, reduzindo um ponto de vida dele
	-> Cada monstro só pode atacar uma vez por rodada, e se possuir efeito, só pode usar uma única vez
	-> Por turno, só pode ser usada uma carta de magia
- O efeito de magias e monstros com efeito será "eliminar uma carta inimiga", consumindo as duas cartas após o uso.
- Para iniciar o proximo turno e necessario clicar o botao "Finalizar Turno"
- Cada jogador tem 2 vidas.
- Quem zerar de vida primeiro perde

Implementacao:
- A lógica do jogo e controlada pela classe "Game".
- A classe "Game" usa as classes "Card" (representa uma carta) e "CardDeck" (representa um deck de cartas).
- Todas estas classes são derivadas de "Observer" de maneira que podem ser observadas por componentes de interface com o usuário
- Sempre que sinalizam eventos as classes do jogo enviam uma instancia de "GameEvent" p/a interface que as estiver observando. 
- Instancias de "GameEvent" indicam a quem o evento se destina (Target) e qual a ação (Action) mais um parametro extra (String)
- A interface com o usuário tem como classe principal "GameWindow".
- Para exibir as cartas existe o "CardView" (capaz de exibir uma carta)
- Para exibir um deck existe o "DeckView" (capaz de exibir um deck de cartas)
- "GameWindow" e "DeckView" são observadores de "Game" e "CardDeck", respectivamente
- "CardView" é mais complexo: observa "Card" (para exibir a imagem correta toda a vez que a carta é virada) e
- é observado por "DeckView" (para selecionar a carta clicada). Note que para "DeckView" observar "CardView" usa-se um
- interface específico chamado "CardSelected". Este é um relacionamento entre componentes de interface pois um "DeckView" e uma - colecao de "CardViews". Então quando uma carta é clicada ela notifica seu observador ("DeckView") que anota a carta selecionada
- e aciona o método "play" de "Game". 
- A classe "ImageFactory" garante que só as imagens das cartas usadas são realmente carregadas para a memória e que uma mesma -
- imagem não é carregada duas vezes.
